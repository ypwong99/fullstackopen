{"ast":null,"code":"var _jsxFileName = \"/Users/wongyipun/Dropbox/Work/Online Courses/Fullstackopen/part1/unicafe/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = props => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: props.handleClick,\n    children: props.text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 3\n  }, this);\n};\n\n_c = Button;\n\nconst Statistics = props => {\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [props.name, \" \", props.value]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 3\n  }, this);\n};\n\n_c2 = Statistics;\n\nconst App = () => {\n  _s();\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  let all = good + neutral + bad;\n  let average = (good - bad) / all;\n  let positive = good / all * 100;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setGood(good + 1),\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setNeutral(neutral + 1),\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setBad(bad + 1),\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      name: \"good\",\n      value: good\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      name: \"neutral\",\n      value: neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      name: \"bad\",\n      value: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      name: \"all\",\n      value: all\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      name: \"average\",\n      value: average\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      name: \"positive\",\n      value: positive\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 3\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Statistics\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/Users/wongyipun/Dropbox/Work/Online Courses/Fullstackopen/part1/unicafe/src/App.js"],"names":["React","useState","Button","props","handleClick","text","Statistics","name","value","App","good","setGood","neutral","setNeutral","bad","setBad","all","average","positive"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACzB,sBACC;AAAQ,IAAA,OAAO,EAAEA,KAAK,CAACC,WAAvB;AAAA,cACED,KAAK,CAACE;AADR;AAAA;AAAA;AAAA;AAAA,UADD;AAKA,CAND;;KAAMH,M;;AAQN,MAAMI,UAAU,GAAIH,KAAD,IAAW;AAC7B,sBACC;AAAA,eAAIA,KAAK,CAACI,IAAV,OAAiBJ,KAAK,CAACK,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAGA,CAJD;;MAAMF,U;;AAMN,MAAMG,GAAG,GAAG,MAAM;AAAA;;AACjB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACa,GAAD,EAAMC,MAAN,IAAgBd,QAAQ,CAAC,CAAD,CAA9B;AACA,MAAIe,GAAG,GAAGN,IAAI,GAAGE,OAAP,GAAiBE,GAA3B;AACA,MAAIG,OAAO,GAAG,CAACP,IAAI,GAAGI,GAAR,IAAeE,GAA7B;AACA,MAAIE,QAAQ,GAAGR,IAAI,GAAGM,GAAP,GAAa,GAA5B;AAEA,sBACC;AAAA,4BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAE,MAAML,OAAO,CAACD,IAAI,GAAG,CAAR,CAAlC;AAA8C,MAAA,IAAI,EAAC;AAAnD;AAAA;AAAA;AAAA;AAAA,YAFD,eAGC,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAE,MAAMG,UAAU,CAACD,OAAO,GAAG,CAAX,CAArC;AAAoD,MAAA,IAAI,EAAC;AAAzD;AAAA;AAAA;AAAA;AAAA,YAHD,eAIC,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAE,MAAMG,MAAM,CAACD,GAAG,GAAG,CAAP,CAAjC;AAA4C,MAAA,IAAI,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA,YAJD,eAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALD,eAMC,QAAC,UAAD;AAAY,MAAA,IAAI,EAAC,MAAjB;AAAwB,MAAA,KAAK,EAAEJ;AAA/B;AAAA;AAAA;AAAA;AAAA,YAND,eAOC,QAAC,UAAD;AAAY,MAAA,IAAI,EAAC,SAAjB;AAA2B,MAAA,KAAK,EAAEE;AAAlC;AAAA;AAAA;AAAA;AAAA,YAPD,eAQC,QAAC,UAAD;AAAY,MAAA,IAAI,EAAC,KAAjB;AAAuB,MAAA,KAAK,EAAEE;AAA9B;AAAA;AAAA;AAAA;AAAA,YARD,eASC,QAAC,UAAD;AAAY,MAAA,IAAI,EAAC,KAAjB;AAAuB,MAAA,KAAK,EAAEE;AAA9B;AAAA;AAAA;AAAA;AAAA,YATD,eAUC,QAAC,UAAD;AAAY,MAAA,IAAI,EAAC,SAAjB;AAA2B,MAAA,KAAK,EAAEC;AAAlC;AAAA;AAAA;AAAA;AAAA,YAVD,eAWC,QAAC,UAAD;AAAY,MAAA,IAAI,EAAC,UAAjB;AAA4B,MAAA,KAAK,EAAEC;AAAnC;AAAA;AAAA;AAAA;AAAA,YAXD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAeA,CAxBD;;GAAMT,G;;MAAAA,G;AA0BN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react'\n\nconst Button = (props) => {\n\treturn(\n\t\t<button onClick={props.handleClick}>\n\t\t\t{props.text}\n\t\t</button>\n\t)\n}\n\nconst Statistics = (props) => {\n\treturn(\n\t\t<p>{props.name} {props.value}</p>\n\t)\n}\n\nconst App = () => {\n\t// save clicks of each button to its own state\n\tconst [good, setGood] = useState(0)\n\tconst [neutral, setNeutral] = useState(0)\n\tconst [bad, setBad] = useState(0)\n\tlet all = good + neutral + bad\n\tlet average = (good - bad) / all\n\tlet positive = good / all * 100\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>give feedback</h1>\n\t\t\t<Button handleClick={() => setGood(good + 1)} text=\"good\" />\n\t\t\t<Button handleClick={() => setNeutral(neutral + 1)} text=\"neutral\" />\n\t\t\t<Button handleClick={() => setBad(bad + 1)} text=\"bad\" />\n\t\t\t<h1>statistics</h1>\n\t\t\t<Statistics name=\"good\" value={good} />\n\t\t\t<Statistics name=\"neutral\" value={neutral} />\n\t\t\t<Statistics name=\"bad\" value={bad} />\n\t\t\t<Statistics name=\"all\" value={all} />\n\t\t\t<Statistics name=\"average\" value={average} />\n\t\t\t<Statistics name=\"positive\" value={positive} />\n\t\t</div>\n\t)\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}