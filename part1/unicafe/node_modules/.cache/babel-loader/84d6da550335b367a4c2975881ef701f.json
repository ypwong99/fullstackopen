{"ast":null,"code":"var _jsxFileName = \"/Users/wongyipun/Dropbox/Work/Online Courses/Fullstackopen/part1/unicafe/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = props => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: props.handleClick,\n    children: props.text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 3\n  }, this);\n};\n\n_c = Button;\n\nconst Statistics = ({\n  good,\n  neutral,\n  bad\n}) => {\n  let all = good + neutral + bad;\n  let average = (good - bad) / all;\n  let positive = good / all * 100;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"good \", good]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"neutral \", neutral]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"bad \", bad]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"all \", all]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"average \", average]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"positive \", positive, \" %\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 3\n  }, this);\n};\n\n_c2 = Statistics;\n\nconst App = () => {\n  _s();\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setGood(good + 1),\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setNeutral(neutral + 1),\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setBad(bad + 1),\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      neutral: neutral,\n      bad: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 3\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Statistics\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/Users/wongyipun/Dropbox/Work/Online Courses/Fullstackopen/part1/unicafe/src/App.js"],"names":["React","useState","Button","props","handleClick","text","Statistics","good","neutral","bad","all","average","positive","App","setGood","setNeutral","setBad"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACzB,sBACC;AAAQ,IAAA,OAAO,EAAEA,KAAK,CAACC,WAAvB;AAAA,cACED,KAAK,CAACE;AADR;AAAA;AAAA;AAAA;AAAA,UADD;AAKA,CAND;;KAAMH,M;;AAQN,MAAMI,UAAU,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,OAAP;AAAgBC,EAAAA;AAAhB,CAAD,KAA0B;AAC5C,MAAIC,GAAG,GAAGH,IAAI,GAAGC,OAAP,GAAiBC,GAA3B;AACA,MAAIE,OAAO,GAAG,CAACJ,IAAI,GAAGE,GAAR,IAAeC,GAA7B;AACA,MAAIE,QAAQ,GAAGL,IAAI,GAAGG,GAAP,GAAa,GAA5B;AAEA,sBACC;AAAA,4BACC;AAAA,0BAASH,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAA,6BAAYC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD,eAGC;AAAA,yBAAQC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA,YAHD,eAIC;AAAA,yBAAQC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA,YAJD,eAKC;AAAA,6BAAYC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,YALD,eAMC;AAAA,8BAAaC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA,YAND;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAUA,CAfD;;MAAMN,U;;AAiBN,MAAMO,GAAG,GAAG,MAAM;AAAA;;AACjB;AACA,QAAM,CAACN,IAAD,EAAOO,OAAP,IAAkBb,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACO,OAAD,EAAUO,UAAV,IAAwBd,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACQ,GAAD,EAAMO,MAAN,IAAgBf,QAAQ,CAAC,CAAD,CAA9B;AAEA,sBACC;AAAA,4BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAE,MAAMa,OAAO,CAACP,IAAI,GAAG,CAAR,CAAlC;AAA8C,MAAA,IAAI,EAAC;AAAnD;AAAA;AAAA;AAAA;AAAA,YAFD,eAGC,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAE,MAAMQ,UAAU,CAACP,OAAO,GAAG,CAAX,CAArC;AAAoD,MAAA,IAAI,EAAC;AAAzD;AAAA;AAAA;AAAA;AAAA,YAHD,eAIC,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAE,MAAMQ,MAAM,CAACP,GAAG,GAAG,CAAP,CAAjC;AAA4C,MAAA,IAAI,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA,YAJD,eAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALD,eAMC,QAAC,UAAD;AAAY,MAAA,IAAI,EAAEF,IAAlB;AAAwB,MAAA,OAAO,EAAEC,OAAjC;AAA0C,MAAA,GAAG,EAAEC;AAA/C;AAAA;AAAA;AAAA;AAAA,YAND;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAUA,CAhBD;;GAAMI,G;;MAAAA,G;AAkBN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react'\n\nconst Button = (props) => {\n\treturn(\n\t\t<button onClick={props.handleClick}>\n\t\t\t{props.text}\n\t\t</button>\n\t)\n}\n\nconst Statistics = ({good, neutral, bad}) => {\n\tlet all = good + neutral + bad\n\tlet average = (good - bad) / all\n\tlet positive = good / all * 100\n\n\treturn(\n\t\t<div>\n\t\t\t<p>good {good}</p>\n\t\t\t<p>neutral {neutral}</p>\n\t\t\t<p>bad {bad}</p>\n\t\t\t<p>all {all}</p>\n\t\t\t<p>average {average}</p>\n\t\t\t<p>positive {positive} %</p>\n\t\t</div>\n\t)\n}\n\nconst App = () => {\n\t// save clicks of each button to its own state\n\tconst [good, setGood] = useState(0)\n\tconst [neutral, setNeutral] = useState(0)\n\tconst [bad, setBad] = useState(0)\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>give feedback</h1>\n\t\t\t<Button handleClick={() => setGood(good + 1)} text=\"good\" />\n\t\t\t<Button handleClick={() => setNeutral(neutral + 1)} text=\"neutral\" />\n\t\t\t<Button handleClick={() => setBad(bad + 1)} text=\"bad\" />\n\t\t\t<h1>statistics</h1>\n\t\t\t<Statistics good={good} neutral={neutral} bad={bad} />\n\t\t</div>\n\t)\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}